// <auto-generated />
using System;
using ECommerceProduct.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ECommerceProduct.Migrations
{
    [DbContext(typeof(ProductDetailsContext))]
    partial class ProductDetailsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ECommerceProduct.Entities.Model.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Category")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ImageAsset")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("ProductCount")
                        .HasColumnType("int");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Visibility")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8de4b55d-80d2-4313-9367-de5c561ef335"),
                            Category = new Guid("78366a93-ff88-47c6-982e-e5fd1491f5eb"),
                            CreateBy = new Guid("f46f9dba-8a1c-4dd9-a8ea-c572a83be0be"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 241, DateTimeKind.Local).AddTicks(6015),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageAsset = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Apple IPhone Xs Max",
                            Price = 100000f,
                            ProductCount = 50,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Visibility = new Guid("d2c13aea-044d-4f1d-a0ea-3937c85ef0ae")
                        },
                        new
                        {
                            Id = new Guid("24d066c6-92f8-4457-9475-435090170ff1"),
                            Category = new Guid("78366a93-ff88-47c6-982e-e5fd1491f5eb"),
                            CreateBy = new Guid("f46f9dba-8a1c-4dd9-a8ea-c572a83be0be"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 243, DateTimeKind.Local).AddTicks(8235),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageAsset = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Apple IPhone 14",
                            Price = 150000f,
                            ProductCount = 500,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Visibility = new Guid("d2c13aea-044d-4f1d-a0ea-3937c85ef0ae")
                        },
                        new
                        {
                            Id = new Guid("37eee076-d740-430c-a3e6-4b56a5d0f5c4"),
                            Category = new Guid("1fa74cce-2a56-44f4-b4b7-853babb4bfb0"),
                            CreateBy = new Guid("f46f9dba-8a1c-4dd9-a8ea-c572a83be0be"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 243, DateTimeKind.Local).AddTicks(8338),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageAsset = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Fan",
                            Price = 5000f,
                            ProductCount = 500,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Visibility = new Guid("d2c13aea-044d-4f1d-a0ea-3937c85ef0ae")
                        },
                        new
                        {
                            Id = new Guid("552d5bb7-3af3-4f82-b44b-f32468d46c9d"),
                            Category = new Guid("1fa74cce-2a56-44f4-b4b7-853babb4bfb0"),
                            CreateBy = new Guid("f46f9dba-8a1c-4dd9-a8ea-c572a83be0be"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 243, DateTimeKind.Local).AddTicks(8365),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageAsset = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Light",
                            Price = 800f,
                            ProductCount = 500,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Visibility = new Guid("d2c13aea-044d-4f1d-a0ea-3937c85ef0ae")
                        },
                        new
                        {
                            Id = new Guid("0215de4b-e4ae-46fd-b530-92678aaa3487"),
                            Category = new Guid("61ba2ce4-3d28-46d4-b190-ff01c1d00ce2"),
                            CreateBy = new Guid("f46f9dba-8a1c-4dd9-a8ea-c572a83be0be"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 243, DateTimeKind.Local).AddTicks(8390),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageAsset = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Ghee Bottle",
                            Price = 250f,
                            ProductCount = 250,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Visibility = new Guid("d2c13aea-044d-4f1d-a0ea-3937c85ef0ae")
                        },
                        new
                        {
                            Id = new Guid("0fcfc4c9-d283-4d4a-8b88-fe8a5d53b529"),
                            Category = new Guid("61ba2ce4-3d28-46d4-b190-ff01c1d00ce2"),
                            CreateBy = new Guid("f46f9dba-8a1c-4dd9-a8ea-c572a83be0be"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 243, DateTimeKind.Local).AddTicks(8420),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageAsset = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Honey Bottle",
                            Price = 300f,
                            ProductCount = 250,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Visibility = new Guid("d2c13aea-044d-4f1d-a0ea-3937c85ef0ae")
                        },
                        new
                        {
                            Id = new Guid("e0df594f-1a9b-4fa8-9ac0-6b24db187318"),
                            Category = new Guid("f5b90d42-9c02-465e-b29e-3ac8339c2fc2"),
                            CreateBy = new Guid("f46f9dba-8a1c-4dd9-a8ea-c572a83be0be"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 243, DateTimeKind.Local).AddTicks(8443),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageAsset = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Sony Alpha",
                            Price = 250000f,
                            ProductCount = 50,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Visibility = new Guid("d2c13aea-044d-4f1d-a0ea-3937c85ef0ae")
                        },
                        new
                        {
                            Id = new Guid("99532ba0-b7e3-4a8a-ad91-7524b95c6d98"),
                            Category = new Guid("f5b90d42-9c02-465e-b29e-3ac8339c2fc2"),
                            CreateBy = new Guid("f46f9dba-8a1c-4dd9-a8ea-c572a83be0be"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 243, DateTimeKind.Local).AddTicks(8466),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageAsset = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Canon 5000D",
                            Price = 75000f,
                            ProductCount = 50,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Visibility = new Guid("e55b3bf9-9e45-4e3a-8484-0a25e18c4734")
                        });
                });

            modelBuilder.Entity("ECommerceProduct.Entities.Model.RefSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RefSets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("24085e18-602d-4d27-8e97-2263202c6064"),
                            CreateBy = new Guid("68417748-6864-4866-8d9b-b82ae29da396"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 244, DateTimeKind.Local).AddTicks(2859),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Types of Products",
                            Key = "PRODUCT_TYPE",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("1a78c6af-aa76-4e14-b9bc-ad41eb31b2b2"),
                            CreateBy = new Guid("68417748-6864-4866-8d9b-b82ae29da396"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 244, DateTimeKind.Local).AddTicks(3204),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Visibility to users",
                            Key = "PRODUCT_VISIBILITY",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("ECommerceProduct.Entities.Model.RefTerm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RefTerms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("78366a93-ff88-47c6-982e-e5fd1491f5eb"),
                            CreateBy = new Guid("68417748-6864-4866-8d9b-b82ae29da396"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 244, DateTimeKind.Local).AddTicks(5372),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Contains tech gadgets",
                            Key = "TECH",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("1fa74cce-2a56-44f4-b4b7-853babb4bfb0"),
                            CreateBy = new Guid("68417748-6864-4866-8d9b-b82ae29da396"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 244, DateTimeKind.Local).AddTicks(5878),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Contains home acessories",
                            Key = "HOME",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("61ba2ce4-3d28-46d4-b190-ff01c1d00ce2"),
                            CreateBy = new Guid("68417748-6864-4866-8d9b-b82ae29da396"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 244, DateTimeKind.Local).AddTicks(5968),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Contains types of foods",
                            Key = "FOOD",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("f5b90d42-9c02-465e-b29e-3ac8339c2fc2"),
                            CreateBy = new Guid("68417748-6864-4866-8d9b-b82ae29da396"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 244, DateTimeKind.Local).AddTicks(5994),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Contains all types of Camera",
                            Key = "CAMERA",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d2c13aea-044d-4f1d-a0ea-3937c85ef0ae"),
                            CreateBy = new Guid("68417748-6864-4866-8d9b-b82ae29da396"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 244, DateTimeKind.Local).AddTicks(6017),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Visible to the users",
                            Key = "VISIBLIE",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("e55b3bf9-9e45-4e3a-8484-0a25e18c4734"),
                            CreateBy = new Guid("68417748-6864-4866-8d9b-b82ae29da396"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 244, DateTimeKind.Local).AddTicks(6042),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Not visible to the users",
                            Key = "INVINCIBLE",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("ECommerceProduct.Entities.Model.SetRefTerm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RefSetid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReftermId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("SetRefTerms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("399d3958-35a7-43ac-ad4d-32f49ab96fb1"),
                            CreateBy = new Guid("68417748-6864-4866-8d9b-b82ae29da396"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 244, DateTimeKind.Local).AddTicks(9073),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RefSetid = new Guid("24085e18-602d-4d27-8e97-2263202c6064"),
                            ReftermId = new Guid("78366a93-ff88-47c6-982e-e5fd1491f5eb"),
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("117e4539-493c-43ff-88f7-524777fe9fe4"),
                            CreateBy = new Guid("68417748-6864-4866-8d9b-b82ae29da396"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 244, DateTimeKind.Local).AddTicks(9408),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RefSetid = new Guid("24085e18-602d-4d27-8e97-2263202c6064"),
                            ReftermId = new Guid("1fa74cce-2a56-44f4-b4b7-853babb4bfb0"),
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("44ec4508-1d9e-4f9f-b110-d863cfdd7a1c"),
                            CreateBy = new Guid("68417748-6864-4866-8d9b-b82ae29da396"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 244, DateTimeKind.Local).AddTicks(9600),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RefSetid = new Guid("24085e18-602d-4d27-8e97-2263202c6064"),
                            ReftermId = new Guid("61ba2ce4-3d28-46d4-b190-ff01c1d00ce2"),
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("456657b0-7444-47e1-ad58-2e670a78231d"),
                            CreateBy = new Guid("68417748-6864-4866-8d9b-b82ae29da396"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 244, DateTimeKind.Local).AddTicks(9695),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RefSetid = new Guid("24085e18-602d-4d27-8e97-2263202c6064"),
                            ReftermId = new Guid("f5b90d42-9c02-465e-b29e-3ac8339c2fc2"),
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("426de7a2-bbc3-436c-b97e-598572bf6a40"),
                            CreateBy = new Guid("68417748-6864-4866-8d9b-b82ae29da396"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 244, DateTimeKind.Local).AddTicks(9738),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RefSetid = new Guid("1a78c6af-aa76-4e14-b9bc-ad41eb31b2b2"),
                            ReftermId = new Guid("d2c13aea-044d-4f1d-a0ea-3937c85ef0ae"),
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("eb9c0adf-6faf-47eb-b997-82e052875e90"),
                            CreateBy = new Guid("68417748-6864-4866-8d9b-b82ae29da396"),
                            DateCreated = new DateTime(2023, 2, 12, 12, 58, 38, 244, DateTimeKind.Local).AddTicks(9784),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RefSetid = new Guid("1a78c6af-aa76-4e14-b9bc-ad41eb31b2b2"),
                            ReftermId = new Guid("e55b3bf9-9e45-4e3a-8484-0a25e18c4734"),
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
